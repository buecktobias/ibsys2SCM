@startuml
' ===== ORM Package =====
package "Models" {
  class MaterialGraph {
    + id: int
    + name: String
  }

  class Process {
    + id: int
    + duration: int
  }

  class ProcessInORM {
    + quantity: int
  }

  class ProcessOutORM {
  }

  class Item {
    + id: int
  }
  class Bought extends Item{
  }

  class WorkstationORM {
    + id: int
  }

  ' ORM Associations
  MaterialGraph "1" o-- "n" ProcessORM
  MaterialGraph "1" o-- "n" MaterialGraph: "has"
  ProcessORM "1" o-- "n" ProcessInORM
  ProcessORM "1" o-- "1" ProcessOutORM
  ProcessInORM o-- Item
  ProcessOutORM o-- Item
  ProcessORM "n" o-- "1" WorkstationORM
}

package Conversion {
  class ProcessConverter {
    + convert(process): ProcessORM
    + toDomain(procORM): Process
  }

  class GraphConverter {
  }

  ' Dependencies
  GraphConverter --> ProcessConverter
  GraphConverter --> MaterialGraph
  ProcessConverter --> Process
}

package "Visualization" {
  interface MermaidContent {
    + get_mermaid_code() : String
  }

  class ClassDef implements MermaidContent {
    + fill: String
    + stroke: String
  }

  class MermaidStyle implements MermaidContent {
    + get_mermaid_code() : String
  }

  class MermaidBuilder implements MermaidContent {
    + addNode()
    + addRounded()
    + addArrow()
  }

  class VisualizeMermaid implements MermaidContent {
    - graph: MaterialGraph
    + get_mermaid_code() : String
  }

  ' Visualization Dependencies
  VisualizeMermaid --> MermaidBuilder
  VisualizeMermaid --> MaterialGraph
  VisualizeMermaid ..> Process
}

@enduml
